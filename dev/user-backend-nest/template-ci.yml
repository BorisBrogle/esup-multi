variables:
  RUN_BUILD_CMD: "npm run build"
  RUN_LINT_CMD: "npm run lint"
  DIST_PATH: "./dist"
  DOCKERFILE_PATH: "${CI_PROJECT_DIR}/dev/user-backend-nest/Dockerfile"

cache:
  key:
    files:
      - ${CI_PROJECT_DIR}/${CURRENT_DIR}/package-lock.json
  paths:
    - ${CI_PROJECT_DIR}/${CURRENT_DIR}/node_modules/

build-dev:
  stage: build
  image: node:$NODE_VERSION
  before_script:
    - cd $CURRENT_DIR
    - npm ci
  script:
    - $RUN_LINT_CMD
    - $RUN_BUILD_CMD
    - npm ci --omit=dev
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/${CURRENT_DIR}/${DIST_DIR}
    expire_in: 1 hour
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop-sied"'

#dependency-checker-dev:
#  stage: test
#  image:
#    name: registry.gitlab.com/gitlab-ci-utils/docker-dependency-check:latest
#    entrypoint: [ "" ]
#  script:
#    - >
#      /usr/share/dependency-check/bin/dependency-check.sh --scan "${CI_PROJECT_DIR}/${CURRENT_DIR}" --format ALL
#      --project "${CI_PROJECT_NAME}_${CURRENT_PROJECT}" --failOnCVSS 0
#  allow_failure: true
#  artifacts:
#    when: always
#    paths:
#      # Save the HTML and JSON report artifacts
#      - "./dependency-check-report.html"
#      - "./dependency-check-report.json"

deploy-dev:
  stage: deploy
  needs:
    - build-dev
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    # On renseigne les informations de connexion au registry Harbor dans un fichier de conf Kaniko
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  script:
    # On compile l'image Docker et on la push dans le registry avec Kaniko
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/${CURRENT_DIR}"
      --build-arg NODE_VERSION=$NODE_VERSION
      --build-arg DIST_DIR=$DIST_PATH
      --dockerfile $DOCKERFILE_PATH
      --destination "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
      --destination "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:develop"
  when: manual
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop-sied"'
