apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backend.fullname" . }}
  labels:
    {{- include "backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "backend.selectorLabels" . | nindent 8 }}
    spec:
#      initContainers:
#        - name: wait-for-db
#          image: "{{ .Values.initContainerWaitForDB.imageName }}"
#          command:
#            - 'sh'
#            - '-c'
#            - >
#              until nc -z -w 2 {{ .Release.Name }}-{{ .Values.initContainerWaitForDB.waitServiceName }} {{ .Values.initContainerWaitForDB.waitServicePort }} && echo {{ .Values.initContainerWaitForDB.waitServiceName }} ok;
#                do sleep 2;
#              done

      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "backend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      containers:
        {{- if not .Values.microService.disabled }}
        - name: {{ .Chart.Name }}-{{ .Values.microService.name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.repositoryUrl }}/{{ .Values.microService.repositoryName }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          {{ $data := dict "Values" .Values "servicePath" .Values.microService.path }}
          env:
            {{- if and .Values.microService.env }}
            {{ $data := dict "Values" .Values "env" .Values.microService.env }}
            {{- include "helpers.list-env-variables" $data | indent 12 }}
            {{ end }}
          command:
            {{  range .Values.images.nodeBaseCommand }}
            - {{ . | quote }}
            {{ end }}
          {{- if .Values.microService.mountEnvFile }}
          volumeMounts:
            - name: {{ .Values.microService.name }}-env-volume
              {{- toYaml .Values.defaultEnvVolumeMountParams | default "" | nindent 14 }}
          {{- end}}
          {{- if .Values.microService.containerPort }}
          ports:
            - name: http
              containerPort: {{ .Values.microService.containerPort }}
          {{- end }}
        {{- end }}

      volumes:
      {{- $configMapName := .Values.configMap.name -}}
      {{- if .Values.microService.mountEnvFile }}
        - name: {{ .Values.microService.name }}-env-volume
          configMap:
            name: {{ $configMapName }}
            items:
              - key: {{ .Values.microService.name }}.env
                path: .env
      {{- end}}
