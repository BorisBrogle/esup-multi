apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backend.fullname" . }}
  labels:
    {{- include "backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "backend.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: wait-for-db
          image: "{{ .Values.initContainerWaitForDB.imageName }}"
          command:
            - 'sh'
            - '-c'
            - >
              until nc -z -w 2 {{ .Release.Name }}-{{ .Values.initContainerWaitForDB.waitServiceName }} {{ .Values.initContainerWaitForDB.waitServicePort }} && echo {{ .Values.initContainerWaitForDB.waitServiceName }} ok;
                do sleep 2;
              done

      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "backend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      containers:
        {{- if not .Values.images.services.auth.disabled }}
        - name: {{ .Chart.Name }}-auth
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.repositoryUrl }}/{{ .Values.images.services.auth.repositoryName }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          command:
            {{  range .Values.images.nodeBaseCommand }}
            - {{ . | quote }}
            {{ end }}
          env:
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name:  {{ .Release.Name }}-mongodb
                  key: mongodb-root-password
            - name: AUTH_SERVICE_MONGO_URL
              value: "mongodb://root:$(MONGODB_ROOT_PASSWORD)@{{ .Release.Name }}-mongodb:27017/"
            {{ $data := dict "Values" .Values "env" .Values.images.services.auth.env }}
            {{- include "helpers.list-env-variables" $data | indent 12 }}
        {{- end }}
        {{- if not .Values.images.services.cards.disabled }}
        - name: {{ .Chart.Name }}-cards
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.repositoryUrl }}/{{ .Values.images.services.cards.repositoryName }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
            {{ $data := dict "Values" .Values "env" .Values.images.services.cards.env }}
            {{- include "helpers.list-env-variables" $data | indent 12 }}
          command:
            {{  range .Values.images.nodeBaseCommand }}
            - {{ . | quote }}
            {{ end }}
        {{- end }}
        {{- if not .Values.images.services.chatbot.disabled }}
        - name: {{ .Chart.Name }}-chatbot
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.repositoryUrl }}/{{ .Values.images.services.chatbot.repositoryName }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
            {{ $data := dict "Values" .Values "env" .Values.images.services.chatbot.env }}
            {{- include "helpers.list-env-variables" $data | indent 12 }}
          command:
            {{  range .Values.images.nodeBaseCommand }}
            - {{ . | quote }}
            {{ end }}
        {{- end }}
        {{- if not .Values.images.services.clocking.disabled }}
        - name: {{ .Chart.Name }}-clocking
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.repositoryUrl }}/{{ .Values.images.services.clocking.repositoryName }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
            {{ $data := dict "Values" .Values "env" .Values.images.services.clocking.env }}
            {{- include "helpers.list-env-variables" $data | indent 12 }}
          command:
            {{  range .Values.images.nodeBaseCommand }}
            - {{ . | quote }}
            {{ end }}
        {{- end }}
        {{- if not (index .Values "images" "services" "contact-us" "disabled") }}
        - name: {{ .Chart.Name }}-contact-us
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.repositoryUrl }}/{{ index .Values "images" "services" "contact-us" "repositoryName" }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
            {{ $data := dict "Values" .Values "env" (index .Values "images" "services" "contact-us" "env") }}
            {{- include "helpers.list-env-variables" $data | indent 12 }}
          command:
            {{ range .Values.images.nodeBaseCommand }}
            - {{ . | quote }}
            {{ end }}
        {{- end }}
        {{- if not .Values.images.services.contacts.disabled }}
        - name: {{ .Chart.Name }}-contacts
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.repositoryUrl }}/{{ .Values.images.services.contacts.repositoryName }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
            {{ $data := dict "Values" .Values "env" .Values.images.services.contacts.env }}
            {{- include "helpers.list-env-variables" $data | indent 12 }}
          command:
            {{  range .Values.images.nodeBaseCommand }}
            - {{ . | quote }}
            {{ end }}
        {{- end }}
        {{- if not .Values.images.services.features.disabled }}
        - name: {{ .Chart.Name }}-features
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.repositoryUrl }}/{{ .Values.images.services.features.repositoryName }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
            {{ $data := dict "Values" .Values "env" .Values.images.services.features.env }}
            {{- include "helpers.list-env-variables" $data | indent 12 }}
          command:
            {{  range .Values.images.nodeBaseCommand }}
            - {{ . | quote }}
            {{ end }}
        {{- end }}
        {{- if not (index .Values "images" "services" "important-news" "disabled") }}
        - name: {{ .Chart.Name }}-important-news
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.repositoryUrl }}/{{ index .Values "images" "services" "important-news" "repositoryName" }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
            {{ $data := dict "Values" .Values "env" (index .Values "images" "services" "important-news" "env") }}
            {{- include "helpers.list-env-variables" $data | indent 12 }}
          command:
            {{  range .Values.images.nodeBaseCommand }}
            - {{ . | quote }}
            {{ end }}
        {{- end }}
        - name: {{ .Chart.Name }}-main
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.repositoryUrl }}/{{ .Values.images.services.main.repositoryName }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /map
              port: {{ .Values.images.services.main.containerPort }}
            initialDelaySeconds: 120
          readinessProbe:
            httpGet:
              path: /map
              port: {{ .Values.images.services.main.containerPort }}
            initialDelaySeconds: 120
          env:
            {{ $data := dict "Values" .Values "env" .Values.images.services.main.env }}
            {{- include "helpers.list-env-variables" $data | indent 12 }}
          command:
            {{  range .Values.images.nodeBaseCommand }}
            - {{ . | quote }}
            {{ end }}
          volumeMounts:
            - name: main-env-volume
              {{- toYaml .Values.defaultEnvVolumeMountParams | default "" | nindent 14 }} 
          ports:
            - name: http
              containerPort: {{ .Values.images.services.main.containerPort }}
        {{- if not .Values.images.services.map.disabled }}
        - name: {{ .Chart.Name }}-map
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.repositoryUrl }}/{{ .Values.images.services.map.repositoryName }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
            {{ $data := dict "Values" .Values "env" .Values.images.services.map.env }}
            {{- include "helpers.list-env-variables" $data | indent 12 }}
          command:
            {{  range .Values.images.nodeBaseCommand }}
            - {{ . | quote }}
            {{ end }}
          volumeMounts:
            - name: map-env-volume
              {{- toYaml .Values.defaultEnvVolumeMountParams | default "" | nindent 14 }}
        {{- end }}
        {{- if not .Values.images.services.notifications.disabled }}
        - name: {{ .Chart.Name }}-notifications
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.repositoryUrl }}/{{ .Values.images.services.notifications.repositoryName }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
            {{ $data := dict "Values" .Values "env" .Values.images.services.notifications.env }}
            {{- include "helpers.list-env-variables" $data | indent 12 }}
          command:
            {{  range .Values.images.nodeBaseCommand }}
            - {{ . | quote }}
            {{ end }}
        {{- end }}
        {{- if not .Values.images.services.restaurants.disabled }}
        - name: {{ .Chart.Name }}-restaurants
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.repositoryUrl }}/{{ .Values.images.services.restaurants.repositoryName }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
            {{ $data := dict "Values" .Values "env" .Values.images.services.restaurants.env }}
            {{- include "helpers.list-env-variables" $data | indent 12 }}
          command:
            {{ range .Values.images.nodeBaseCommand }}
            - {{ . | quote }}
            {{ end }}
        {{- end }}
        {{- if not .Values.images.services.rss.disabled }}
        - name: {{ .Chart.Name }}-rss
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.repositoryUrl }}/{{ .Values.images.services.rss.repositoryName }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
            {{ $data := dict "Values" .Values "env" .Values.images.services.rss.env }}
            {{- include "helpers.list-env-variables" $data | indent 12 }}
          command:
            {{  range .Values.images.nodeBaseCommand }}
            - {{ . | quote }}
            {{ end }}
        {{- end }}
        {{- if not .Values.images.services.schedule.disabled }}
        - name: {{ .Chart.Name }}-schedule
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.repositoryUrl }}/{{ .Values.images.services.schedule.repositoryName }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
            {{ $data := dict "Values" .Values "env" .Values.images.services.schedule.env }}
            {{- include "helpers.list-env-variables" $data | indent 12 }}
          command:
            {{  range .Values.images.nodeBaseCommand }}
            - {{ . | quote }}
            {{ end }}
        {{- end }}
        {{- if not (index .Values "images" "services" "social-network" "disabled") }}
        - name: {{ .Chart.Name }}-social-network
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.repositoryUrl }}/{{ index .Values "images" "services" "social-network" "repositoryName" }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
            {{ $data := dict "Values" .Values "env" (index .Values "images" "services" "social-network" "env") }}
            {{- include "helpers.list-env-variables" $data | indent 12 }}
          command:
            {{  range .Values.images.nodeBaseCommand }}
            - {{ . | quote }}
            {{ end }}
        {{- end }}
        {{- if not (index .Values "images" "services" "static-pages" "disabled") }}
        - name: {{ .Chart.Name }}-static-pages
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.repositoryUrl }}/{{ index .Values "images" "services" "static-pages" "repositoryName" }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
            {{ $data := dict "Values" .Values "env" (index .Values "images" "services" "static-pages" "env") }}
            {{- include "helpers.list-env-variables" $data | indent 12 }}
          command:
            {{  range .Values.images.nodeBaseCommand }}
            - {{ . | quote }}
            {{ end }}
        {{- end }}
      volumes:
      {{- $configMapName := .Values.configMap.name -}}
      {{- range $val := .Values.envFilesToMount }}
        - name: {{ $val }}-env-volume
          configMap:
            name: {{ $configMapName }}
            items:
              - key: {{ $val }}.env
                path: .env
      {{- end}}
