########################################################################################################################
# VARIABLES
########################################################################################################################
variables:
  BACKEND_PATH: dev/user-backend-nest
  FRONTEND_PATH: dev/user-frontend-ionic

stages:
  - packages


########################################################################################################################
# COMMON
########################################################################################################################
# Job permettant de récupérer la version de NodeJS à utiliser pour les images Docker du backend
check-nodejs-version:
  stage: .pre
  script:
    # on récupère la version de Node utilisée dans le backend via le fichier .nvmrc
    - >
      if [[ -z "$(cat ${BACKEND_PATH}/.nvmrc)" ]]; then
        echo "NODE_VERSION=lts" > vars.env # si le fichier .nvmrc est vide ou n'existe pas on utilise la version LTS de Node
      else
        echo "NODE_VERSION=$(cat ${BACKEND_PATH}/.nvmrc)" > vars.env
      fi
    - less vars.env
  artifacts:
    reports:
      dotenv: vars.env
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau du backend
    - changes:
        - ${BACKEND_PATH}/main/**/*
        - ${BACKEND_PATH}/microservices/**/*
        - ${FRONTEND_PATH}/**/*


########################################################################################################################
# BACKEND
########################################################################################################################
# CI du service API Gateway
backend:main:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${BACKEND_PATH}/main/.gitlab-ci.yml
    strategy: depend
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau de backend/main
    - changes:
        - ${BACKEND_PATH}/main/**/*

# CI du microservice auth
backend:microservice:auth:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${BACKEND_PATH}/microservices/auth/.gitlab-ci.yml
    strategy: depend
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau de backend/microservices/auth
    - changes:
        - ${BACKEND_PATH}/microservices/auth/**/*

# CI du microservice cards
backend:microservice:cards:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${BACKEND_PATH}/microservices/cards/.gitlab-ci.yml
    strategy: depend
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau de backend/microservices/cards
    - changes:
        - ${BACKEND_PATH}/microservices/cards/**/*

# CI du microservice chatbot
backend:microservice:chatbot:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${BACKEND_PATH}/microservices/chatbot/.gitlab-ci.yml
    strategy: depend
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau de backend/microservices/chatbot
    - changes:
        - ${BACKEND_PATH}/microservices/chatbot/**/*

# CI du microservice clocking
backend:microservice:clocking:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${BACKEND_PATH}/microservices/clocking/.gitlab-ci.yml
    strategy: depend
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau de backend/microservices/clocking
    - changes:
        - ${BACKEND_PATH}/microservices/clocking/**/*

# CI du microservice contact-us
backend:microservice:contact-us:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${BACKEND_PATH}/microservices/contact-us/.gitlab-ci.yml
    strategy: depend
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau de backend/microservices/contact-us
    - changes:
        - ${BACKEND_PATH}/microservices/contact-us/**/*

# CI du microservice contacts
backend:microservice:contacts:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${BACKEND_PATH}/microservices/contacts/.gitlab-ci.yml
    strategy: depend
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau de backend/microservices/contacts
    - changes:
        - ${BACKEND_PATH}/microservices/contacts/**/*

# CI du microservice features
backend:microservice:features:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${BACKEND_PATH}/microservices/features/.gitlab-ci.yml
    strategy: depend
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau de backend/microservices/features
    - changes:
        - ${BACKEND_PATH}/microservices/features/**/*

# CI du microservice important-news
backend:microservice:important-news:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${BACKEND_PATH}/microservices/important-news/.gitlab-ci.yml
    strategy: depend
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau de backend/microservices/important-news
    - changes:
        - ${BACKEND_PATH}/microservices/important-news/**/*

# CI du microservice mail-calendar
backend:microservice:mail-calendar:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${BACKEND_PATH}/microservices/mail-calendar/.gitlab-ci.yml
    strategy: depend
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau de backend/microservices/mail-calendar
    - changes:
        - ${BACKEND_PATH}/microservices/mail-calendar/**/*

# CI du microservice map
backend:microservice:map:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${BACKEND_PATH}/microservices/map/.gitlab-ci.yml
    strategy: depend
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau de backend/microservices/map
    - changes:
        - ${BACKEND_PATH}/microservices/map/**/*

# CI du microservice notifications
backend:microservice:notifications:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${BACKEND_PATH}/microservices/notifications/.gitlab-ci.yml
    strategy: depend
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau de backend/microservices/map
    - changes:
        - ${BACKEND_PATH}/microservices/notifications/**/*

# CI du microservice restaurants
backend:microservice:restaurants:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${BACKEND_PATH}/microservices/restaurants/.gitlab-ci.yml
    strategy: depend
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau de backend/microservices/rss
    - changes:
        - ${BACKEND_PATH}/microservices/restaurants/**/*

# CI du microservice rss
backend:microservice:rss:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${BACKEND_PATH}/microservices/rss/.gitlab-ci.yml
    strategy: depend
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau de backend/microservices/rss
    - changes:
        - ${BACKEND_PATH}/microservices/rss/**/*

# CI du microservice schedule
backend:microservice:schedule:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${BACKEND_PATH}/microservices/schedule/.gitlab-ci.yml
    strategy: depend
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau de backend/microservices/schedule
    - changes:
        - ${BACKEND_PATH}/microservices/schedule/**/*

# CI du microservice social-network
backend:microservice:social-network:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${BACKEND_PATH}/microservices/social-network/.gitlab-ci.yml
    strategy: depend
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau de backend/microservices/social-network
    - changes:
        - ${BACKEND_PATH}/microservices/social-network/**/*

# CI du microservice static-pages
backend:microservice:static-pages:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${BACKEND_PATH}/microservices/static-pages/.gitlab-ci.yml
    strategy: depend
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau de backend/microservices/static-pages
    - changes:
        - ${BACKEND_PATH}/microservices/static-pages/**/*

# CI du microservice statistics
backend:microservice:statistics:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${BACKEND_PATH}/microservices/statistics/.gitlab-ci.yml
    strategy: depend
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau de backend/microservices/statistics
    - changes:
        - ${BACKEND_PATH}/microservices/statistics/**/*

########################################################################################################################
# FRONTEND
########################################################################################################################
# CI du frontend
frontend:
  stage: packages
  needs:
    - check-nodejs-version
  variables:
    NODE_VERSION: $NODE_VERSION
  trigger:
    include: ${FRONTEND_PATH}/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
        - ${FRONTEND_PATH}/src/**/*
        - ${FRONTEND_PATH}/project/**/*

